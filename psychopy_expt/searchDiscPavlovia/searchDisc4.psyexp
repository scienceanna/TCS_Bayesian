<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.8">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="True" valType="bool"/>
    <Param name="Save excel file" updates="None" val="True" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="pix" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1080]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="searchDisc4" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <ImageComponent name="dispStimuli">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$ImageFile" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="dispStimuli" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="(50*x_scale, 28.125*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'1','2'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$correctAnswer" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="break_2">
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg='doh'&amp;#10;trialCounter=0&amp;#10;accuracySum=0&amp;#10;totRT=0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot;&quot;;&amp;#10;trialCounter=0;&amp;#10;accuracySum=0;&amp;#10;totRT=0;&amp;#10;&amp;#10;round = function(num, n=0) {    &amp;#10;   return +(Math.round(num + (&quot;e+&quot; + n))  + (&quot;e-&quot; + n));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="trialCounter=trialCounter+1;  &amp;#10;&amp;#10;if(key_resp_2.corr) {&amp;#10;    accuracySum = accuracySum + 1;&amp;#10;    totRT = totRT + key_resp_2.rt;&amp;#10;}&amp;#10;&amp;#10;percentAccurate = accuracySum/trialCounter * 100;&amp;#10;percentAccurate = round(percentAccurate, 3);&amp;#10;meanRT = totRT/trialCounter;&amp;#10;meanRT = round(meanRT, 3);&amp;#10;&amp;#10;msg = &quot;You have completed &quot; + trialCounter + &quot; trials. You are &quot; + percentAccurate + &quot;% accurate so far, with an average reaction time of &quot; + meanRT + &quot;s. Press space bar to continue&quot;;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="trialCounter = trialCounter + 1&amp;#10;&amp;#10;if key_resp_2.corr:&amp;#10;    accuracySum = accuracySum + 1&amp;#10;    totRT = totRT + key_resp_2.rt&amp;#10;&amp;#10;percentAccurate = accuracySum/trialCounter * 100&amp;#10;percentAccurate = round(percentAccurate, 3)&amp;#10;meanRT = totRT/trialCounter&amp;#10;meanRT = round(meanRT, 3)&amp;#10;&amp;#10;msg = &quot;You have completed %i out of 570 trials. You are %i %% accurate so far, with an average reaction time of %.2f sec. Press space bar to continue.&quot; %(trialCounter,percentAccurate,meanRT)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if trialCounter != 60 and trialCounter != 120 and trialCounter !=180 and trialCounter !=240 and trialCounter !=300 and trialCounter !=360 and trialCounter !=420:&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((trialCounter !== 60 &amp;&amp; trialCounter !== 120 &amp;&amp; trialCounter !== 180 &amp;&amp; trialCounter !== 240 &amp;&amp; trialCounter !== 300 &amp;&amp; trialCounter !== 360 &amp;&amp; trialCounter !== 420)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="breakMessage">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="breakMessage" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'space','return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="WelcomeScreen">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome to the experimental trials.&amp;#10;Be reminded that your task is to look for &amp;#10;a white or a blue semicircle.&amp;#10;If semicircle is facing left press '1'.&amp;#10;If semicircle is facing right press '2'.&amp;#10;Press SPACE bar to continue&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="WelcomePractice">
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome! Your task is to find&amp;#10;white or blue semicircle and indicate &amp;#10;if it is facing left or right.&amp;#10;Press SPACE bar to continue.&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="practiceTrials">
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$ImageFile" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="(50*x_scale, 28.125*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'1','2'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$correctAnswer" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="targetStimuli">
      <ImageComponent name="image_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="targets/leftDisc.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0,75)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="(1*x_scale, 1*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_6">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_6" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press 1 if you see left semicircle&amp;#10;&amp;#10;&amp;#10;Press 2 if you see right semicircle&amp;#10;&amp;#10;&amp;#10;Press SPACE to start" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="targets/rightDisc.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -100)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="set every repeat" val="(1*x_scale, 1*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="targetStimuli2"/>
    <Routine name="practiceFeedback">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg='doh'" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot;doh&quot;;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="console.log(key_resp_4.corr);&amp;#10;&amp;#10;if(key_resp_4.corr) {&amp;#10;    msg = &quot;Correct!&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Oops, incorrect&quot;;&amp;#10;}&amp;#10;        " valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp_4.corr:&amp;#10;    msg = &quot;Correct!&quot;&amp;#10;else:&amp;#10;    msg = &quot;Oops, incorrect&quot;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="//if ((manual_loop !== 20)) {&amp;#10;//    continueRoutine = false;&amp;#10;//}&amp;#10;&amp;#10;//responses = psychoJS.experiment._trialsData  // get list of responses&amp;#10;//nCorr = responses.reduce((a, b) =&gt; a + b['key_resp_4.corr'], 0)  // get sum&amp;#10;//meanRT = responses.reduce((a, b) =&gt; a + b['key_resp_4.rt'], 0) / responses.length  // get mean&amp;#10;&amp;#10;//meanRT = round(meanRT, 3);&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="fixation">
      <PolygonComponent name="fix">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="fix" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="cross" valType="str"/>
        <Param name="size" updates="set every repeat" val="(1*x_scale, 1*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_7">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_7" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions">
      <TextComponent name="text_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="text_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Look at the fixation cross and press SPACE bar when you&amp;#10;are ready to start the trial.&amp;#10;Press '1' for semicircle facing left.&amp;#10;Press '2' for semicircle facing right.&amp;#10;You will first complete 20 practice trials.&amp;#10;Press SPACE bar when you are ready to start." valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_8">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_8" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fix2">
      <PolygonComponent name="fix2experiment">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="fix2experiment" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="cross" valType="str"/>
        <Param name="size" updates="set every repeat" val="(1*x_scale, 1*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_9">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_9" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="consent1">
      <TextComponent name="text_6">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please read each statement carefully and click either SPACE to Agree and continue or ESC to disagree and terminate the experiment.&amp;#10;Press SPACE to continue." valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_10" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="consent2">
      <TextComponent name="text_7">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="text_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="I understand that my participation in this project will involve looking for a target object on a computer screen and indicating what direction the target is facing, by pressing a computer keyboard buttons. This will require approximately 30min of my time.&amp;#10;I understand that participation in this study is entirely voluntary and that I can withdraw from the study at any time without providing a reason by simply closing the browser or pressing esc button on your keyboard. I am aware that this will lead to loss of course credit or reimbursement. The incomplete data sets will not be saved.&amp;#10;I understand that I can discuss any concerns with the experimenters before or after participating.&amp;#10;This research is carried out by postdoctoral research fellow Dr Anna Nowakowska in the School of Psychology, University of Aberdeen under the supervision of lecturer Anna Hughes and lecturer Alasdair Clarke (Department of Psychology, University of Essex)&amp;#10;Contact information:&amp;#10;[a.nowakowska@abdn.ac.uk, anna.hughes@essex.ac.uk, a.clarke@essex.ac.uk]&amp;#10;Press Space to Agree and continue.&amp;#10;Press ESC button to disagree and terminate the experiment.&amp;#10;Press SPACE to agree and continue.&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_11" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="consent3">
      <TextComponent name="text_8">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text_8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="I understand that the information provided by me will be held anonymously so that it is impossible to trace this information back to me individually. Information will be held on a secure server and may be retained indefinitely. &amp;#10;To ensure access to the data for the wider research community, the anonymous dataset may be archived in an online repository (e.g., the Open Science Framework, https://osf.io/) or send to other researchers upon request for inspection.&amp;#10;Press Space to Agree and continue.&amp;#10;Press ESC button to disagree and terminate the experiment.&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_12">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_12" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="consent4">
      <TextComponent name="text_9">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text_9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="I confirm that the purpose, participation information, and data storage of this research have been sufficiently explained. &amp;#10;I understand that at the end of the experiment I will be provided with additional information about the purpose of this research.&amp;#10;Press SPACE to agree and continue to the experiment.&amp;#10;Press ESC button to disagree and terminate the experiment." valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_13">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_13" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="creditcard">
      <CodeComponent name="code_JS">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="event = psychoJS.eventManager;&amp;#10;thisExp = psychoJS.experiment;&amp;#10;win = psychoJS.window;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_JS" valType="code"/>
      </CodeComponent>
      <CodeComponent name="code_start">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="oldt=0&amp;#10;x_size=8.560&amp;#10;y_size=5.398&amp;#10;screen_height=0&amp;#10;&amp;#10;if win.units=='norm':&amp;#10;    x_scale=.05&amp;#10;    y_scale=.1&amp;#10;    dbase = .0001&amp;#10;    unittext=' norm units'&amp;#10;    vsize=2&amp;#10;elif win.units=='pix':&amp;#10;    x_scale=60&amp;#10;    y_scale=40&amp;#10;    dbase = .1&amp;#10;    unittext=' pixels'&amp;#10;    vsize=win.size[1]&amp;#10;else:&amp;#10;    x_scale=.05&amp;#10;    y_scale=.05&amp;#10;    dbase = .0001&amp;#10;    unittext=' height units'&amp;#10;    vsize=1" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="oldt = 0;&amp;#10;x_size = 8.56;&amp;#10;y_size = 5.398;&amp;#10;screen_height = 0;&amp;#10;if ((win.units === &quot;norm&quot;)) {&amp;#10;    x_scale = 0.05;&amp;#10;    y_scale = 0.1;&amp;#10;    dbase = 0.0001;&amp;#10;    unittext = &quot; norm units&quot;;&amp;#10;    vsize = 2;&amp;#10;} else {&amp;#10;    if ((win.units === &quot;pix&quot;)) {&amp;#10;        x_scale = 60;&amp;#10;        y_scale = 40;&amp;#10;        dbase = 0.1;&amp;#10;        unittext = &quot; pixels&quot;;&amp;#10;        vsize = win.size[1];&amp;#10;    } else {&amp;#10;        x_scale = 0.05;&amp;#10;        y_scale = 0.05;&amp;#10;        dbase = 0.0001;&amp;#10;        unittext = &quot; height units&quot;;&amp;#10;        vsize = 1;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys=event.getKeys()&amp;#10;&amp;#10;if len(keys):&amp;#10;    if t-oldt&lt;.5:&amp;#10;        dscale=5*dbase&amp;#10;        oldt=t&amp;#10;    else:&amp;#10;        dscale=dbase&amp;#10;        oldt=t&amp;#10;    if 'space' in keys:&amp;#10;        continueRoutine=False&amp;#10;    elif 'up' in keys:&amp;#10;        y_scale=round((y_scale+dscale)*10000)/10000&amp;#10;    elif 'down' in keys:&amp;#10;        y_scale=round((y_scale-dscale)*10000)/10000&amp;#10;    elif 'left' in keys:&amp;#10;        x_scale=round((x_scale-dscale)*10000)/10000&amp;#10;    elif 'right' in keys:&amp;#10;        x_scale=round((x_scale+dscale)*10000)/10000&amp;#10;    screen_height=round(vsize*10/y_scale)/10&amp;#10;    text_bottom.text='X Scale = '+str(x_scale)+unittext+' per cm, Y Scale = '+str(y_scale)+unittext+' per cm\nScreen height = '+str(screen_height)+' cm\n\nPress the space bar when done'&amp;#10;    ccimage.size=[x_size*x_scale, y_size*y_scale]&amp;#10;    " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = event.getKeys();&amp;#10;if (keys.length) {&amp;#10;    if (((t - oldt) &lt; 0.5)) {&amp;#10;        dscale = (5 * dbase);&amp;#10;        oldt = t;&amp;#10;    } else {&amp;#10;        dscale = dbase;&amp;#10;        oldt = t;&amp;#10;    }&amp;#10;    if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;up&quot;, keys)) {&amp;#10;            y_scale = (round(((y_scale + dscale) * 10000)) / 10000);&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;down&quot;, keys)) {&amp;#10;                y_scale = (round(((y_scale - dscale) * 10000)) / 10000);&amp;#10;            } else {&amp;#10;                if (_pj.in_es6(&quot;left&quot;, keys)) {&amp;#10;                    x_scale = (round(((x_scale - dscale) * 10000)) / 10000);&amp;#10;                } else {&amp;#10;                    if (_pj.in_es6(&quot;right&quot;, keys)) {&amp;#10;                        x_scale = (round(((x_scale + dscale) * 10000)) / 10000);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    screen_height = (round(((vsize * 10) / y_scale)) / 10);&amp;#10;    text_bottom.text = ((((((((&quot;X Scale = &quot; + x_scale.toString()) + unittext) + &quot; per cm, Y Scale = &quot;) + y_scale.toString()) + unittext) + &quot; per cm\nScreen height = &quot;) + screen_height.toString()) + &quot; cm\n\nPress the space bar when done&quot;);&amp;#10;    ccimage.size = [(x_size * x_scale), (y_size * y_scale)];&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="thisExp.addData(&quot;X Scale&quot;, x_scale);&amp;#10;thisExp.addData(&quot;Y Scale&quot;, y_scale);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('X Scale',x_scale)&amp;#10;thisExp.addData('Y Scale',y_scale)&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_start" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_top">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_top" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.7)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Resize this image to match the size of a credit card&amp;#10;Up arrow for taller&amp;#10;Down arrow for shorter&amp;#10;Left arrow for narrower&amp;#10;Right arrow for wider" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <TextComponent name="text_bottom">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_bottom" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press the space bar when done" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <ImageComponent name="ccimage">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="bank-1300155_640.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="ccimage" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="$(x_size*x_scale, y_size*y_scale)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="creditcard"/>
    <Routine name="consent1"/>
    <Routine name="consent2"/>
    <Routine name="consent3"/>
    <Routine name="consent4"/>
    <Routine name="WelcomePractice"/>
    <Routine name="instructions"/>
    <Routine name="targetStimuli"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_0_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_3_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_5_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_7_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_8_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_10_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_12_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_13_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_16_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_19_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_20_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_21_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_25_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_28_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_29_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_32_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_33_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_35_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_36_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2)]), OrderedDict([('ImageFile', 'Practice arrays/exp1a_trial_37_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="image_stimuli_practice.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="practiceTrials"/>
    <Routine name="practiceFeedback"/>
    <LoopTerminator name="trials_2"/>
    <Routine name="WelcomeScreen"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('ImageFile', 'Images/exp1a_trial_0_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 0), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_1_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 1), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_2_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 2), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_3_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 3), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_4_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 4), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_5_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 5), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_6_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 6), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_7_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 7), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_8_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 8), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_9_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 9), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_10_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 10), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_11_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 11), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_12_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 12), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_13_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 13), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_14_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 14), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_15_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 15), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_16_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 16), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_17_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 17), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_18_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 18), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_19_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 19), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_20_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 20), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_21_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 21), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_22_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 22), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_23_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 23), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_24_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 24), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_25_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 25), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_26_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 26), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_27_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 27), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_28_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 28), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_29_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 29), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_30_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 30), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_31_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 31), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_32_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 32), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_33_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 33), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_34_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 34), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_35_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 35), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_36_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 36), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_37_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 37), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_38_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 38), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_39_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 39), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_40_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 40), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_41_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 41), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_42_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 42), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_43_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 43), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_44_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 44), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_45_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 45), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_46_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 46), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_47_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 47), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_48_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 48), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_49_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 49), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_50_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 50), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_51_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 51), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_52_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 52), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_53_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 53), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_54_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 54), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_55_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 55), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_56_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 56), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_57_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 57), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_58_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 58), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_59_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 59), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_60_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 60), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_61_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 61), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_62_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 62), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_63_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 63), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_64_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 64), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_65_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 65), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_66_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 66), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_67_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 67), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_68_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 68), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_69_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 69), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_70_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 70), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_71_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 71), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_72_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 72), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_73_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 73), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_74_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 74), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_75_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 75), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_76_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 76), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_77_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 77), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_78_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 78), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_79_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 79), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_80_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 80), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_81_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 81), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_82_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 82), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_83_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 83), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_84_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 84), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_85_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 85), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_86_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 86), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_87_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 87), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_88_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 88), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_89_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 89), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_90_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 90), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_91_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 91), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_92_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 92), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_93_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 93), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_94_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 94), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_95_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 95), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_96_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 96), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_97_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 97), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_98_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 98), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_99_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 99), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_100_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 100), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_101_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 101), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_102_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 102), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_103_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 103), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_104_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 104), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_105_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 105), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_106_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 106), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_107_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 107), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_108_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 108), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_109_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 109), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_110_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 110), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_111_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 111), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_112_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1a'), ('trial', 112), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1a_trial_113_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1a'), ('trial', 113), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_0_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 0), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_1_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 1), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_2_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 2), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_3_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 3), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_4_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 4), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_5_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 5), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_6_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 6), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_7_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 7), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_8_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 8), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_9_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 9), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_10_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 10), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_11_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 11), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_12_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 12), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_13_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 13), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_14_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 14), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_15_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 15), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_16_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 16), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_17_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 17), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_18_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 18), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_19_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 19), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_20_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 20), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_21_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 21), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_22_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 22), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_23_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 23), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_24_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 24), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_25_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 25), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_26_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 26), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_27_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 27), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_28_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 28), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_29_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 29), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_30_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 30), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_31_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 31), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_32_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 32), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_33_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 33), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_34_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 34), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_35_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 35), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_36_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 36), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_37_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 37), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_38_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 38), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_39_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 39), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_40_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 40), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_41_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 41), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_42_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 42), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_43_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 43), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_44_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 44), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_45_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 45), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_46_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 46), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_47_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 47), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_48_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 48), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_49_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 49), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_50_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 50), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_51_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 51), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_52_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 52), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_53_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 53), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_54_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 54), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_55_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 55), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_56_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 56), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_57_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 57), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_58_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 58), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_59_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 59), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_60_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 60), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_61_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 61), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_62_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 62), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_63_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 63), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_64_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 64), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_65_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 65), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_66_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 66), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_67_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 67), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_68_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 68), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_69_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 69), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_70_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 70), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_71_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 71), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_72_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 72), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_73_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 73), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_74_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 74), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_75_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 75), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_76_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 76), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_77_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 77), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_78_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 78), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_79_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 79), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_80_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 80), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_81_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 81), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_82_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 82), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_83_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 83), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_84_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 84), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_85_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 85), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_86_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 86), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_87_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 87), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_88_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 88), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_89_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 89), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_90_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 90), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_91_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 91), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_92_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 92), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_93_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 93), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_94_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 94), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_95_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 95), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_96_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 96), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_97_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 97), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_98_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 98), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_99_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 99), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_100_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 100), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_101_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 101), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_102_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 102), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_103_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 103), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_104_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 104), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_105_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 105), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_106_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 106), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_107_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 107), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_108_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 108), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_109_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 109), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_110_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 110), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_111_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 111), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_112_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '1b'), ('trial', 112), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp1b_trial_113_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '1b'), ('trial', 113), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_0_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 0), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_1_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 1), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_2_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 2), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_3_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 3), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_4_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 4), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_5_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 5), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_6_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 6), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_7_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 7), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_8_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 8), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_9_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 9), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_10_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 10), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_11_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 11), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_12_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 12), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_13_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 13), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_14_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 14), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_15_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 15), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_16_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 16), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_17_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 17), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_18_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 18), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_19_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 19), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_20_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 20), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_21_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 21), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_22_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 22), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_23_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 23), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_24_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 24), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_25_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 25), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_26_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 26), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_27_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 27), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_28_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 28), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_29_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 29), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_30_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 30), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_31_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 31), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_32_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 32), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_33_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 33), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_34_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 34), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_35_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 35), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_36_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 36), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_37_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 37), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_38_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 38), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_39_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 39), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_40_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 40), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_41_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 41), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_42_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 42), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_43_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 43), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_44_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 44), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_45_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 45), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_46_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 46), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_47_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 47), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_48_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 48), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_49_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 49), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_50_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 50), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_51_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 51), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_52_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 52), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_53_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 53), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_54_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 54), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_55_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 55), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_56_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 56), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_57_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 57), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_58_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 58), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_59_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 59), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_60_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 60), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_61_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 61), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_62_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 62), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_63_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 63), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_64_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 64), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_65_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 65), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_66_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 66), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_67_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 67), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_68_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 68), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_69_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 69), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_70_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 70), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_71_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 71), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_72_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 72), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_73_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 73), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_74_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 74), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_75_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 75), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_76_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 76), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_77_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 77), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_78_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 78), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_79_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 79), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_80_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 80), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_81_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 81), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_82_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 82), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_83_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 83), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_84_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 84), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_85_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 85), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_86_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 86), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_87_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 87), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_88_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 88), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_89_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 89), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_90_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 90), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_91_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 91), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_92_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 92), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_93_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 93), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_94_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 94), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_95_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 95), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_96_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 96), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_97_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 97), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_98_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 98), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_99_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 99), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_100_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 100), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_101_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 101), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_102_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 102), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_103_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 103), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_104_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 104), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_105_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 105), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_106_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 106), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_107_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 107), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_108_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 108), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_109_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 109), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_110_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 110), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_111_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 111), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_112_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2a'), ('trial', 112), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2a_trial_113_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2a'), ('trial', 113), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_0_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 0), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_1_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 1), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_2_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 2), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_3_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 3), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_4_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 4), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_5_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 5), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_6_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 6), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_7_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 7), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_8_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 8), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_9_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 9), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_10_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 10), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_11_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 11), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_12_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 12), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_13_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 13), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_14_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 14), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_15_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 15), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_16_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 16), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_17_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 17), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_18_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 18), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_19_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 19), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_20_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 20), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_21_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 21), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_22_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 22), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_23_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 23), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_24_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 24), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_25_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 25), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_26_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 26), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_27_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 27), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_28_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 28), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_29_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 29), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_30_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 30), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_31_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 31), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_32_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 32), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_33_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 33), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_34_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 34), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_35_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 35), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_36_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 36), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_37_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 37), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_38_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 38), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_39_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 39), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_40_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 40), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_41_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 41), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_42_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 42), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_43_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 43), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_44_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 44), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_45_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 45), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_46_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 46), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_47_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 47), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_48_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 48), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_49_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 49), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_50_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 50), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_51_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 51), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_52_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 52), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_53_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 53), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_54_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 54), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_55_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 55), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_56_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 56), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_57_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 57), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_58_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 58), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_59_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 59), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_60_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 60), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_61_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 61), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_62_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 62), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_63_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 63), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_64_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 64), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_65_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 65), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_66_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 66), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_67_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 67), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_68_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 68), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_69_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 69), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_70_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 70), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_71_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 71), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_72_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 72), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_73_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 73), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_74_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 74), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_75_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 75), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_76_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 76), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_77_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 77), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_78_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 78), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_79_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 79), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_80_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 80), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_81_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 81), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_82_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 82), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_83_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 83), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_84_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 84), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_85_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 85), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_86_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 86), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_87_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 87), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_88_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 88), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_89_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 89), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_90_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 90), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_91_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 91), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_92_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 92), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_93_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 93), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_94_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 94), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_95_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 95), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_96_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 96), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_97_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 97), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_98_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 98), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_99_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 99), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_100_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 100), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_101_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 101), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_102_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 102), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_103_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 103), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_104_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 104), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_105_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 105), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_106_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 106), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_107_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 107), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_108_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 108), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_109_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 109), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_110_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 110), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_111_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 111), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_112_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2b'), ('trial', 112), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2b_trial_113_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2b'), ('trial', 113), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_0_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 0), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_1_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 1), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_2_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 2), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_3_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 3), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_4_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 4), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_5_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 5), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_6_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 6), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_7_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 7), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_8_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 8), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_9_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 9), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_10_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 10), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_11_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 11), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_12_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 12), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_13_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 13), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_14_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 14), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_15_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 15), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_16_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 16), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_17_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 17), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_18_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 18), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_19_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 19), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_20_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 20), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_21_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 21), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_22_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 22), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_23_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 23), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_24_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 24), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_25_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 25), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_26_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 26), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_27_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 27), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_28_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 28), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_29_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 29), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_30_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 30), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_31_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 31), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_32_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 32), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_33_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 33), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_34_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 34), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_35_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 35), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_36_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 36), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_37_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 37), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_38_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 38), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_39_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 39), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_40_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 40), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_41_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 41), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_42_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 42), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_43_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 43), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_44_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 44), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_45_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 45), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_46_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 46), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_47_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 47), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_48_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 48), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_49_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 49), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_50_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 50), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_51_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 51), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_52_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 52), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_53_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 53), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_54_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 54), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_55_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 55), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_56_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 56), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_57_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 57), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_58_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 58), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_59_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 59), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_60_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 60), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_61_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 61), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_62_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 62), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_63_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 63), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_64_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 64), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_65_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 65), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_66_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 66), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_67_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 67), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_68_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 68), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_69_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 69), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_70_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 70), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_71_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 71), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_72_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 72), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_73_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 73), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_74_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 74), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_75_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 75), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_76_colour1_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 76), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_77_colour1_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 77), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_78_colour1_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 78), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_79_colour1_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 79), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_80_colour1_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 80), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_81_colour1_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 81), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_82_colour2_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 82), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_83_colour2_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 83), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_84_colour2_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 84), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_85_colour2_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 85), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_86_colour2_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 86), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_87_colour2_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 87), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_88_colour3_distractors1_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 88), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_89_colour3_distractors4_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 89), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_90_colour3_distractors9_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 90), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_91_colour3_distractors19_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 91), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_92_colour3_distractors31_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 92), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_93_colour3_distractors43_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 93), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_94_colour1_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 94), ('colour', 1), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_95_colour1_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 95), ('colour', 1), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_96_colour1_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 96), ('colour', 1), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_97_colour1_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 97), ('colour', 1), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_98_colour1_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 98), ('colour', 1), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_99_colour1_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 99), ('colour', 1), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_100_colour2_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 100), ('colour', 2), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_101_colour2_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 101), ('colour', 2), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_102_colour2_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 102), ('colour', 2), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_103_colour2_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 103), ('colour', 2), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_104_colour2_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 104), ('colour', 2), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_105_colour2_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 105), ('colour', 2), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_106_colour3_distractors1_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 106), ('colour', 3), ('distNo', 1)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_107_colour3_distractors4_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 107), ('colour', 3), ('distNo', 4)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_108_colour3_distractors9_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 108), ('colour', 3), ('distNo', 9)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_109_colour3_distractors19_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 109), ('colour', 3), ('distNo', 19)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_110_colour3_distractors31_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 110), ('colour', 3), ('distNo', 31)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_111_colour3_distractors43_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 111), ('colour', 3), ('distNo', 43)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_112_colour0_distractors0_r.png'), ('targ_side', 'r'), ('correctAnswer', 2), ('exp', '2c'), ('trial', 112), ('colour', 0), ('distNo', 0)]), OrderedDict([('ImageFile', 'Images/exp2c_trial_113_colour0_distractors0_l.png'), ('targ_side', 'l'), ('correctAnswer', 1), ('exp', '2c'), ('trial', 113), ('colour', 0), ('distNo', 0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Images_List.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix2"/>
    <Routine name="trial"/>
    <Routine name="break_2"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
